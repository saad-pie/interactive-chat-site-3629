document.addEventListener('DOMContentLoaded', () => {const infoChatBtn = document.getElementById('infoChatBtn');const workingChatBtn = document.getElementById('workingChatBtn');const infoChatSection = document.getElementById('infoChatSection');const workingChatSection = document.getElementById('workingChatSection');const infoChatMessages = document.getElementById('infoChatMessages');const infoChatInput = document.getElementById('infoChatInput');const infoChatSend = document.getElementById('infoChatSend');const workingChatMessages = document.getElementById('workingChatMessages');const workingChatInput = document.getElementById('workingChatInput');const workingChatSend = document.getElementById('workingChatSend');function addMessage(chatMessagesElement, message, type) {const messageDiv = document.createElement('div');messageDiv.classList.add('message', `${type}-message`);messageDiv.textContent = message;chatMessagesElement.appendChild(messageDiv);chatMessagesElement.scrollTop = chatMessagesElement.scrollHeight;}function showSection(sectionToShow, buttonToActivate) {document.querySelectorAll('.chat-section').forEach(section => {section.classList.remove('active');});document.querySelectorAll('nav button').forEach(button => {button.classList.remove('active');});sectionToShow.classList.add('active');buttonToActivate.classList.add('active');}infoChatBtn.addEventListener('click', () => {showSection(infoChatSection, infoChatBtn);});workingChatBtn.addEventListener('click', () => {showSection(workingChatSection, workingChatBtn);});showSection(infoChatSection, infoChatBtn);const infoBotResponses = {"hello": "Hi there! I'm here to explain this website. What would you like to know?","what is this site about": "This website offers a unique dual-chat experience. You can interact with an AI guide on this page, or switch to a live chat interface on the 'Working Chat Page'.","how does it work": "The 'Info Page Chat' helps you understand the site's features and answers FAQs. The 'Working Chat Page' is a dedicated space for real-time communication.","features": "We have two main features: an AI assistant for guidance (this page) and a dynamic live chat interface for real-time interaction (the other page).","faqs": "I can answer common questions about the site. Just ask! For example, 'What is the purpose?' or 'How do I use the live chat?'","live chat": "The 'Working Chat Page' is where you'll find the live chat. It's designed for real-time communication, whether peer-to-peer or group interactions.","purpose": "The purpose is to provide a seamless transition from learning about the site with an AI guide to actively using its core chat functionality with others.","default": "I'm designed to help you with information about this website. Please ask questions related to its purpose, features, or how to use it."};function getInfoBotResponse(message) {const lowerCaseMessage = message.toLowerCase().trim();for (const key in infoBotResponses) {if (lowerCaseMessage.includes(key)) {return infoBotResponses[key];}}return infoBotResponses["default"];}function handleInfoChatSend() {const userMessage = infoChatInput.value.trim();if (userMessage) {addMessage(infoChatMessages, userMessage, 'user');infoChatInput.value = '';setTimeout(() => {const botResponse = getInfoBotResponse(userMessage);addMessage(infoChatMessages, botResponse, 'bot');}, 1000);}}infoChatSend.addEventListener('click', handleInfoChatSend);infoChatInput.addEventListener('keypress', (e) => {if (e.key === 'Enter') {handleInfoChatSend();}});function handleWorkingChatSend() {const userMessage = workingChatInput.value.trim();if (userMessage) {addMessage(workingChatMessages, userMessage, 'user');workingChatInput.value = '';setTimeout(() => {addMessage(workingChatMessages, `Echo: ${userMessage}`, 'bot');}, 800);}}workingChatSend.addEventListener('click', handleWorkingChatSend);workingChatInput.addEventListener('keypress', (e) => {if (e.key === 'Enter') {handleWorkingChatSend();}});});